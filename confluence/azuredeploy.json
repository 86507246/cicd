{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "https://bitbucket.org/atlassian/atlassian-azure-deployment/raw/master/confluence/",
            "metadata": {
                "description": "Base URL for Marketplace",
                "artifactsBaseUrl": ""
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Scripts storage access token"
            }
        },
        "jumpboxVmSize": {
            "type": "string",
            "defaultValue": "Standard_B1s",
            "metadata": {
                "description": "The size of the virtual machine used for the jumpbox box."
            }
        },
        "jumpboxSshKey": {
            "type": "string",
            "metadata": {
                "description": "The public key for the jumpbox SSH user"
            }
        },
        "jumpboxSshUser": {
            "type": "string",
            "defaultValue": "confluenceadmin",
            "metadata": {
                "description": "The username used to SSH into the jumpbox."
            }
        },
        "clusterSize": {
            "type": "int",
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6
            ],
            "defaultValue": 3,
            "metadata": {
                "description": "The number of Confluence nodes in the cluster. Maximum is 6 nodes."
            }
        },
        "clusterVmSize": {
            "type": "string",
            "defaultValue": "Standard_DS3_v2",
            "allowedValues" : [
                "Standard_D4s_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_D32s_v3",
                "Standard_D64s_v3",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_DS2",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_B4ms",
                "Standard_B8ms",
                "Standard_F2s",
                "Standard_F4s",
                "Standard_F8s",
                "Standard_F16s",
                "Standard_E4s_v3",
                "Standard_E8s_v3",
                "Standard_E16s_v3",
                "Standard_E32s_v3",
                "Standard_E64s_v3",
                "Standard_GS2",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS5",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_DS15_v2",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14",
                "Standard_L4s",
                "Standard_L8s",
                "Standard_L16s",
                "Standard_L32s"
            ],
            "metadata": {
                "description": "The size of the virtual machine used for each Confluence node. The virtual machine must have capacity for 8 or more premium LRS data disks."
            }
        },
        "appGtwyClusterSize": {
            "type": "int",
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6
            ],
            "defaultValue": 2,
            "minValue": 1,
            "metadata": {
                "description": "The number of nodes for the App Gateway cluster"
            }
        },
        "appGtwyTier": {
            "type": "string",
            "allowedValues": [
                "Standard_Small",
                "Standard_Medium",
                "Standard_Large"
            ],
            "defaultValue": "Standard_Medium",
            "metadata": {
                "description": "The application gateway size"
            }
        },
        "sslBase64EncodedPfxCertificate": {
            "type": "string",
            "defaultValue": ""
        },
        "sslPfxCertificatePassword": {
            "type": "securestring",
            "defaultValue": ""
        },
        
        "cname": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "An existing CNAME that will be used to access the Confluence instance."
            }
        },
        "nodeSshUser": {
            "type": "string",
            "defaultValue": "confluenceadmin",
            "metadata": {
                "description": "The username used to SSH into each Confluence node from the jumpbox. This name must not be 'confluence'."
            }
        },
        "nodeSshPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password used to SSH into each Confluence node from the jumpbox."
            }
        },
        "dbCreateNew": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Creates new database or attempts to use existing specified database (has to be in same resource group and location as the target deployment)"
            }
        },
        "dbType": {
            "type": "string",
            "allowedValues": [
                "Azure SQL DB",
                "Azure DB for PostgreSQL"
            ],
            "defaultValue": "Azure SQL DB",
            "metadata": {
                "description": "Database type"
            }
        },
        "dbHost": {
            "type": "string",
            "defaultValue": "AUTO-GENERATED",
            "metadata": {
                "description": "Host name of DB server. Will be autogenerated if a new DB is to be created"
            }
        },
        "dbPort": {
            "type": "string",
            "defaultValue": "1433",
            "metadata": {
                "description": "Database port to use. 1433 for MS SQL, 5432 for Postgres, 3306 for MySQL"
            }
        },
        "dbDatabase": {
            "type": "string",
            "defaultValue": "confdatabase",
            "metadata": {
                "description": "Database name"
            }
        },
        "dbSchema": {
            "type": "string",
            "defaultValue": "[if(parameters('dbCreateNew'), if(equals(parameters('dbType'), 'Azure SQL DB'), 'confschema', 'public'), 'confschema')]",
            "metadata": {
                "description": "Database schema to use"
            }
        },
        "dbUsername": {
            "type": "string",
            "defaultValue": "confluencedbuser",
            "metadata": {
                "description": "Database username"
            }
        },
        "dbPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Database password"
            }
        },
        "dbTier": {
            "type": "string",
            "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
            ],
            "defaultValue": "Standard",
            "metadata": {
                "description": "The database service tier"
            }
        },
        "dbTierSize": {
            "type": "string",
            "allowedValues": [
                "Basic",
                "S1",
                "S2",
                "S3",
                "S4",
                "S6",
                "S7",
                "S9",
                "S12",
                "P1",
                "P2",
                "P4",
                "P6",
                "P11",
                "P15"
            ],
            "defaultValue": "S2",
            "metadata": {
                "description": "The database service tier size"
            }
        },
        "userName": {
            "type": "string",
            "defaultValue": "admin",
            "metadata": {
                "description": "Username of the Confluence administrator."
            }
        },
        "userCredential": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Confluence administrator."
            }
        },
        "userFullname": {
            "type": "string",
            "defaultValue": "Admin Admin"
        },
        "userEmail": {
            "type": "string",
            "defaultValue": "admin@example.com"
        },
        "applicationTitle": {
            "type": "string",
            "defaultValue": "Atlassian Confluence",
            "metadata": {
                "description": "The site title for Confluence."
            }
        },
        "enableEmailAlerts": {
            "type": "bool",
            "defaultValue": true
        },
        "enableApplicationInsights": {
            "type": "bool",
            "defaultValue": true
        },
        "enableAnalytics": {
            "type": "bool",
            "defaultValue": true
        },
        "enableAcceleratedNetworking": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                 "description": "Enable accelerated networking? Needs to be a supported instance type."
             }
         },
        "releaseVersionUrl": {
            "type": "string",
            "defaultValue": "https://confluencedcversion.blob.core.windows.net/version/latest",
            "metadata": {
                "description": "URL for obtaining the latest confluence artifact version."
            }
        }
    },
    "variables": {
        "namespace": "conf",
        "vpcTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/azuredeploy-vpc.json', parameters('_artifactsLocationSasToken')))]",
        "confTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/azuredeploy-confluence.json', parameters('_artifactsLocationSasToken')))]",
        "domainTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/azuredeploy-domain.json', parameters('_artifactsLocationSasToken')))]",
        "alertsTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/azuredeploy-alerts.json', parameters('_artifactsLocationSasToken')))]",
        "dbServerName": "[concat(variables('namespace'), if(equals(parameters('dbType'),'Azure SQL DB'),'sqlserver','postgres'), uniqueString(resourceGroup().id))]",
        "lookup": {
            "dbTierToMaxConnections" : {
                "Basic" : 300,
                "S0" : 600,
                "S1" : 900,
                "S2" : 1200,
                "S3" : 2400,
                "S4" : 4800,
                "S6" : 9600,
                "S7" : 19200,
                "S9" : 30000,
                "S12" : 30000,
                "P1" : 30000,
                "P2" : 30000,
                "P4" : 30000,
                "P6" : 30000,
                "P11" : 30000,
                "P15" : 30000
            },
            "clusterSizeToDbTier": {
                "1": "P1",
                "2": "P2",
                "3": "P4",
                "4": "P4",
                "5": "P6",
                "6": "P11"
            },
            "dbTierToDbEdition": {
                "S2": "Standard",
                "S3": "Standard",
                "P1": "Premium",
                "P2": "Premium",
                "P4": "Premium",
                "P6": "Premium",
                "P11": "Premium",
                "P15": "Premium"
            },
            "clusterSizeToApplicationGatewaySize" : {
                "1": "Standard_Small",
                "2": "Standard_Small",
                "3": "Standard_Medium",
                "4": "Standard_Medium",
                "5": "Standard_Large",
                "6": "Standard_Large"
            }
        }
    },
    "resources": [
        {
            "comments": "Azure tracking GUID for Confluence - ensure right one being used for the delivery channel ie via Azure Marketplace, BitBucket Quickstart etc",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "name": "pid-de1a11e5-9c17-4538-b570-df707237c073",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "name": "vpcTemplate",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vpcTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "jumpboxVmSize": {
                        "value": "[parameters('jumpboxVmSize')]"
                    },
                    "jumpboxSshKey": {
                        "value": "[parameters('jumpboxSshKey')]"
                    },
                    "jumpboxSshUser": {
                        "value": "[parameters('jumpboxSshUser')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "name": "confluenceTemplate",
            "dependsOn": [
                "vpcTemplate"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('confTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "clusterSize": {
                        "value": "[parameters('clusterSize')]"
                    },
                    "clusterVmSize": {
                        "value": "[parameters('clusterVmSize')]"
                    },
                    "appGtwyClusterSize": {
                        "value": "[parameters('appGtwyClusterSize')]"
                    },
                    "appGtwyTier": {
                        "value": "[parameters('appGtwyTier')]"
                    },
                    "nodeSshUser": {
                        "value": "[parameters('nodeSshUser')]"
                    },
                    "nodeSshPassword": {
                        "value": "[parameters('nodeSshPassword')]"
                    },
                    "dbCreateNew": {
                        "value": "[parameters('dbCreateNew')]"
                    },
                    "dbTier": {
                        "value": "[parameters('dbTier')]"
                    },
                    "dbTierSize": {
                        "value": "[parameters('dbTierSize')]"
                    },
                    "dbHost": {
                        "value": "[if(parameters('dbCreateNew'), variables('dbServerName'), parameters('dbHost'))]"
                    },
                    "dbType": {
                        "value": "[if(equals(parameters('dbType'), 'Azure SQL DB'), 'sqlserver', if(equals(parameters('dbType'), 'Azure DB for PostgreSQL'), 'postgres', 'mysql'))]"
                    },
                    "dbPort": {
                        "value": "[if(parameters('dbCreateNew'), if(equals(parameters('dbType'), 'Azure SQL DB'), '1433', '5432'), parameters('dbPort'))]"
                    },
                    "dbDatabase": {
                        "value": "[parameters('dbDatabase')]"
                    },
                    "dbSchema": {
                        "value": "[if(and(parameters('dbCreateNew'), equals(parameters('dbType'), 'Azure DB for PostgreSQL')), 'public', parameters('dbSchema'))]"
                    },
                    "dbUsername": {
                        "value": "[parameters('dbUsername')]"
                    },
                    "dbPassword": {
                        "value": "[parameters('dbPassword')]"
                    },
                    "userName": {
                        "value": "[parameters('userName')]"
                    },
                    "userCredential": {
                        "value": "[parameters('userCredential')]"
                    },
                    "userFullname": {
                        "value": "[parameters('userFullname')]"
                    },
                    "userEmail": {
                        "value": "[parameters('userEmail')]"
                    },
                    "applicationTitle": {
                        "value": "[parameters('applicationTitle')]"
                    },
                    "vnetName": {
                        "value": "[reference('vpcTemplate').outputs.vnetName.value]"
                    },
                    "appSubnetName": {
                        "value": "[reference('vpcTemplate').outputs.appSubnetName.value]"
                    },
                    "gtwySubnetName": {
                        "value": "[reference('vpcTemplate').outputs.gtwySubnetName.value]"
                    },
                    "jumpboxName": {
                        "value": "[reference('vpcTemplate').outputs.jumpboxName.value]"
                    },
                    "jumpboxPublicIpAddress": {
                        "value": "[reference('vpcTemplate').outputs.jumpboxPublicIpAddress.value]"
                    },
                    "sslBase64EncodedPfxCertificate": {
                        "value": "[parameters('sslBase64EncodedPfxCertificate')]"
                    },
                    "sslPfxCertificatePassword": {
                        "value": "[parameters('sslPfxCertificatePassword')]"
                    },
                    "cname": {
                        "value": "[if(greater(length(parameters('cname')), 0), concat('confluence.', parameters('cname')), parameters('cname'))]"
                    },
                    "enableApplicationInsights": {
                        "value": "[parameters('enableApplicationInsights')]"
                    },
                    "enableAnalytics": {
                        "value": "[parameters('enableAnalytics')]"
                    },
                    "enableAcceleratedNetworking": {
                        "value": "[parameters('enableAcceleratedNetworking')]"
                    },
                    "releaseVersionUrl": {
                        "value": "[parameters('releaseVersionUrl')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "name": "domainTemplate",
            "dependsOn": [
                "confluenceTemplate"
            ],
            "condition": "[greater(length(parameters('cname')), 0)]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('domainTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "cname": {
                        "value": "[parameters('cname')]"
                    },
                    "gtwyIpName": {
                        "value": "[reference('confluenceTemplate').outputs.gtwyIpName.value]"
                    },
                    "prefix": {
                        "value": "confluence"
                    }
                }
            }
        },
        {
            "apiVersion": "2015-01-01",
            "name": "alertsTemplate",
            "type": "Microsoft.Resources/deployments",
            "condition": "[parameters('enableEmailAlerts')]",
            "dependsOn": [
                "confluenceTemplate"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('alertsTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "adminUserEmail": {
                        "value": "[parameters('userEmail')]"
                    },
                    "gtwyName": {
                        "value": "[reference('confluenceTemplate').outputs.gtwyName.value]"
                    },
                    "storageAccountName": {
                        "value": "[reference('confluenceTemplate').outputs.storageAccountName.value]"
                    },
                    "clusterName": {
                        "value": "[reference('confluenceTemplate').outputs.clusterName.value]"
                    },
                    "appInsightsName": {
                        "value": "[if(parameters('enableApplicationInsights'), reference('confluenceTemplate').outputs.appInsightsName.value, '')]"
                    },
                    "statusCheckUrl": {
                        "value": "[concat(if(not(empty(parameters('sslBase64EncodedPfxCertificate'))), concat('https://', if(greater(length(parameters('cname')), 0), reference('domainTemplate').outputs.alias.value, reference('confluenceTemplate').outputs.confAppEndpoint.value)), concat('http://', if(greater(length(parameters('cname')), 0), reference('domainTemplate').outputs.alias.value, reference('confluenceTemplate').outputs.confAppEndpoint.value))), '/status')]"
                    },
                    "dbType": {
                        "value": "[if(equals(parameters('dbType'), 'Azure SQL DB'), 'sqlserver', if(equals(parameters('dbType'), 'Azure DB for PostgreSQL'), 'postgres', 'mysql'))]"
                    },
                    "dbDatabaseServerName": {
                        "value": "[split(reference('confluenceTemplate').outputs.dbDatabaseServerName.value, '.')[0]]"
                    },
                    "dbDatabaseName": {
                        "value": "[reference('confluenceTemplate').outputs.dbDatabaseName.value]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "appEndpoint": {
            "type": "string",
            "value": "[if(not(empty(parameters('sslBase64EncodedPfxCertificate'))), concat('https://', if(greater(length(parameters('cname')), 0), reference('domainTemplate').outputs.alias.value, reference('confluenceTemplate').outputs.confAppEndpoint.value)), concat('http://', if(greater(length(parameters('cname')), 0), reference('domainTemplate').outputs.alias.value, reference('confluenceTemplate').outputs.confAppEndpoint.value)))]"
        },
        "bastionUrl": {
            "type": "string",
            "value": "[reference('vpcTemplate').outputs.jumpboxPublicEndpoint.value]"
        },
        "sshUrl": {
            "type": "string",
            "value": "[reference('vpcTemplate').outputs.sshUri.value]"
        },
        "jdbcUrl": {
            "type": "string",
            "value": "[reference('confluenceTemplate').outputs.jdbcUrl.value]"
        }
    }
}
