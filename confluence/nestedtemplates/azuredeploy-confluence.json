{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "https://confluencedcresources.blob.core.windows.net/installfiles",
            "metadata": {
                "description": "Base URL for Marketplace",
                "artifactsBaseUrl": ""
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Scripts storage access token"
            }
        },
        "confluenceVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "The Confluence software product version to install. By default the deployment will download and use the latest version published."
            }
        },
        "clusterSize": {
            "type": "int",
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6
            ],
            "defaultValue": 3,
            "metadata": {
                "description": "The number of Confluence nodes in the cluster. Maximum is 6 nodes."
            }
        },
        "clusterVmSize": {
            "type": "string",
            "defaultValue": "Standard_DS3_v2",
            "allowedValues" : [
                "Standard_D4s_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_D32s_v3",
                "Standard_D64s_v3",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_DS2",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_B4ms",
                "Standard_B8ms",
                "Standard_F2s",
                "Standard_F4s",
                "Standard_F8s",
                "Standard_F16s",
                "Standard_E4s_v3",
                "Standard_E8s_v3",
                "Standard_E16s_v3",
                "Standard_E32s_v3",
                "Standard_E64s_v3",
                "Standard_GS2",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS5",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_DS15_v2",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14",
                "Standard_L4s",
                "Standard_L8s",
                "Standard_L16s",
                "Standard_L32s"
            ],
            "metadata": {
                "description": "The size of the virtual machine used for each Confluence node. The virtual machine must have capacity for 8 or more premium LRS data disks."
            }
        },
        "nodeSshUser": {
            "type": "string",
            "defaultValue": "confluenceadmin",
            "metadata": {
                "description": "The username used to SSH into each Confluence node from the jumpbox. This name must not be 'confluence'"
            }
        },
        "nodeSshPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password used to SSH into each Confluence node from the jumpbox."
            }
        },
        "cname": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "An existing CNAME that will be used to access the Confluence instance."
            }
        },
        "dbCreateNew": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Creates new database or attempts to use existing specified database (has to be in same resource group and location as the target deployment)"
            }
        },
        "dbType": {
            "type": "string",
            "allowedValues": [
                "sqlserver",
                "postgres",
                "mysql"
            ],
            "defaultValue": "sqlserver",
            "metadata": {
                "description": "Database type"
            }
        },
        "dbHost": {
            "type": "string",
            "defaultValue": "AUTO-GENERATED",
            "metadata": {
                "description": "Host name of DB server. Will be autogenerated if a new DB is to be created"
            }
        },
        "dbPort": {
            "type": "string",
            "defaultValue": "[if(equals(parameters('dbType'), 'sqlserver'), '1433', if(equals(parameters('dbType'), 'postgres'), '5432', '3306'))]",
            "metadata": {
                "description": "Database port to use. 1433 for MS SQL, 5432 for Postgres, 3306 for MySQL"
            }
        },
        "dbDatabase": {
            "type": "string",
            "defaultValue": "confdatabase",
            "metadata": {
                "description": "Database name"
            }
        },
        "dbSchema": {
            "type": "string",
            "defaultValue": "[if(parameters('dbCreateNew'), if(equals(parameters('dbType'), 'Azure SQL DB'), 'confschema', 'public'), 'confschema')]",
            "metadata": {
                "description": "Database schema to use"
            }
        },
        "dbUsername": {
            "type": "string",
            "defaultValue": "confluencedbuser",
            "metadata": {
                "description": "Database username"
            }
        },
        "dbPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Database password"
            }
        },
        "dbTier": {
            "type": "string",
            "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
            ],
            "defaultValue": "Standard",
            "metadata": {
                "description": "The database service tier"
            }
        },
        "dbTierSize": {
            "type": "string",
            "allowedValues": [
                "Basic",
                "S1",
                "S2",
                "S3",
                "S4",
                "S6",
                "S7",
                "S9",
                "S12",
                "P1",
                "P2",
                "P4",
                "P6",
                "P11",
                "P15"
            ],
            "defaultValue": "S2",
            "metadata": {
                "description": "The database service tier size"
            }
        },
        "postgresDbSku": {
            "type": "string",
            "defaultValue": "GP_Gen5_4",
            "allowedValues": [
                "GP_Gen5_2",
                "GP_Gen5_4",
                "GP_Gen5_8",
                "GP_Gen5_16",
                "GP_Gen5_32",
                "MO_Gen5_2",
                "MO_Gen5_4",
                "MO_Gen5_8",
                "MO_Gen5_16",
                "MO_Gen5_32"
            ],
            "metadata": {
                "description": "The SKU (stock keeping unit) name of the PostgresSQL instance. Follows the convention {pricing tier}{compute generation}{vCores} eg General Purpose, Generation 5, 4 cores is GP_Gen5_4."
            }
        },
        "postgresDbStorage": {
            "type": "int",
            "defaultValue": 102400,
            "minValue": 102400,
            "maxValue": 4194304,
            "metadata": {
                "description": "The storage size of the PostgresSQL instance."
            }
        },
        "userName": {
            "type": "string",
            "defaultValue": "admin",
            "metadata": {
                "description": "Username of the Confluence administrator."
            }
        },
        "userCredential": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Confluence administrator."
            }
        },
        "userFullname": {
            "type": "string",
            "defaultValue": "Admin Admin"
        },
        "userEmail": {
            "type": "string",
            "defaultValue": "admin@example.com"
        },
        "applicationTitle": {
            "type": "string",
            "defaultValue": "Atlassian Confluence",
            "metadata": {
                "description": "The site title for Confluence."
            }
        },
        "appGtwyClusterSize": {
            "type": "int",
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6
            ],
            "defaultValue": 2,
            "minValue": 1,
            "metadata": {
                "description": "The number of nodes for the App Gateway cluster"
            }
        },
        "appGtwyTier": {
            "type": "string",
            "allowedValues": [
                "Standard_Small",
                "Standard_Medium",
                "Standard_Large"
            ],
            "defaultValue": "Standard_Medium",
            "metadata": {
                "description": "The application gateway size"
            }
        },
        "vnetName": {
            "type": "string"
        },
        "appSubnetName": {
            "type": "string"
        },
        "gtwySubnetName": {
            "type": "string"
        },
        "jumpboxName": {
            "type": "string"
        },
        "jumpboxPublicIpAddress": {
            "type": "string"
        },
        "sslBase64EncodedPfxCertificate": {
            "type": "string",
            "defaultValue": ""
        },
        "sslPfxCertificatePassword": {
            "type": "string",
            "defaultValue": ""
        },
        "enableApplicationInsights": {
            "type": "bool",
            "defaultValue": true
        },
        "enableAnalytics": {
            "type": "bool",
            "defaultValue": true
        },
        "enableAcceleratedNetworking": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Enable accelerated networking? Needs to be a supported instance type."
            }
        },
        "workspaceSku": {
            "type": "string",
            "defaultValue": "Free",
            "allowedValues": [
                "Free",
                "Standard",
                "Premium",
                "Unlimited",
                "PerNode",
                "PerGB2018",
                "Standalone"
            ],
            "metadata": {
                "description": "Workspace SKU"
            }
        }
    },
    "variables": {
        "namespace": "conf",
        "tags": {
            "vendor": "Atlassian",
            "product": "Confluence",
            "provider": "2F0AF47A-92C7-413A-9009-C3815BFF7AF6"
        },
        "storage": {
            "name": "[concat(variables('namespace'), 'storage', uniqueString(resourceGroup().id))]"
        },
        "workspace": {
            "name": "[concat(variables('namespace'), '-omsworkspace-', uniqueString(resourceGroup().id))]"
        },
        "gtwyIpName": "[concat(variables('namespace'), '-appgtwyip-', uniqueString(resourceGroup().id))]",
        "gtwyName": "[if(empty(parameters('sslBase64EncodedPfxCertificate')), concat(variables('namespace'), 'appgateway'), concat(variables('namespace'), 'appgateway-https'))]",
        "gtwyAddressPoolName": "[concat(variables('namespace'), 'appgwaddrpool')]",
        "dbTemplateUri": "[uri(parameters('_artifactsLocation'), concat(if(equals(parameters('dbType'),'sqlserver'),'nestedtemplates/azuredeploy-db-mssql.json','nestedtemplates/azuredeploy-db-postgres.json'), parameters('_artifactsLocationSasToken')))]",
        "byodbTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/azuredeploy-db-byo.json', parameters('_artifactsLocationSasToken')))]",
        "workspaceTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/azuredeploy-workspace.json', parameters('_artifactsLocationSasToken')))]",
        "appGtwyTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/azuredeploy-confluence-gtwy.json', parameters('_artifactsLocationSasToken')))]",
        "vmssTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/azuredeploy-confluence-vmss.json', parameters('_artifactsLocationSasToken')))]",
        "appInsightsTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/azuredeploy-app-insights.json', parameters('_artifactsLocationSasToken')))]",
        "analyticsTemplateUri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/azuredeploy-analytics.json', parameters('_artifactsLocationSasToken')))]",
        "dbTemplate": "[if(equals(parameters('dbType'),'sqlserver'), 'sqlDbTemplate', 'postgresDbTemplate')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2018-07-01",
            "name": "[variables('storage').name]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_GRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "tags": "[variables('tags')]"
        },
        {
            "apiVersion": "2015-01-01",
            "name": "workspaceTemplate",
            "type": "Microsoft.Resources/deployments",
            "condition": "[parameters('enableAnalytics')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('workspaceTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "workspaceName": {
                        "value": "[variables('workspace').name]"
                    },
                    "workspaceSku": {
                        "value": "[parameters('workspaceSku')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2015-01-01",
            "name": "sqlDbTemplate",
            "type": "Microsoft.Resources/deployments",
            "condition": "[and(parameters('dbCreateNew'), equals(parameters('dbType'), 'sqlserver'))]",
            "dependsOn": [
                "workspaceTemplate"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('dbTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "dbServerName": {
                        "value": "[parameters('dbHost')]"
                    },
                    "dbDatabaseName": {
                        "value": "[parameters('dbDatabase')]"
                    },
                    "dbPassword": {
                        "value": "[parameters('dbPassword')]"
                    },
                    "dbUsername": {
                        "value": "[parameters('dbUsername')]"
                    },
                    "dbTier": {
                        "value": "[parameters('dbTier')]"
                    },
                    "dbTierSize": {
                        "value": "[parameters('dbTierSize')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "appSubnetName": {
                        "value": "[parameters('appSubnetName')]"
                    },
                    "workspaceName": {
                        "value": "[variables('workspace').name]"
                    },
                    "enableAnalytics": {
                        "value": "[parameters('enableAnalytics')]"
                    },
                    "jumpboxPublicIpAddress": {
                        "value": "[parameters('jumpboxPublicIpAddress')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2015-01-01",
            "name": "postgresDbTemplate",
            "type": "Microsoft.Resources/deployments",
            "condition": "[and(parameters('dbCreateNew'), equals(parameters('dbType'), 'postgres'))]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('dbTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "dbServerName": {
                        "value": "[parameters('dbHost')]"
                    },
                    "dbDatabaseName": {
                        "value": "[parameters('dbDatabase')]"
                    },
                    "dbUsername": {
                        "value": "[parameters('dbUsername')]"
                    },
                    "dbPassword": {
                        "value": "[parameters('dbPassword')]"
                    },
                    "postgresDbSku": {
                        "value": "[parameters('postgresDbSku')]"
                    },
                    "postgresDbStorage": {
                        "value": "[parameters('postgresDbStorage')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "appSubnetName": {
                        "value": "[parameters('appSubnetName')]"
                    },
                    "jumpboxPublicIpAddress": {
                        "value": "[parameters('jumpboxPublicIpAddress')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2015-01-01",
            "name": "byodbTemplate",
            "type": "Microsoft.Resources/deployments",
            "condition": "[not(parameters('dbCreateNew'))]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('byodbTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "dbType": {
                        "value": "[parameters('dbType')]"
                    },
                    "dbServerName": {
                        "value": "[parameters('dbHost')]"
                    },
                    "dbDatabaseName": {
                        "value": "[parameters('dbDatabase')]"
                    },
                    "dbPort": {
                        "value": "[parameters('dbPort')]"
                    },
                    "dbPassword": {
                        "value": "[parameters('dbPassword')]"
                    },
                    "dbUsername": {
                        "value": "[parameters('dbUsername')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "appSubnetName": {
                        "value": "[parameters('appSubnetName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2018-08-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('gtwyIpName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Basic"
            },
            "zones": [],
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[variables('gtwyIpName')]"
                }
            }
        },
        {
            "apiVersion": "2015-01-01",
            "name": "appGtwyTemplate",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "workspaceTemplate",
                "[variables('gtwyIpName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('appGtwyTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "gtwyIpName": {
                        "value": "[variables('gtwyIpName')]"
                    },
                    "gtwyName": {
                        "value": "[variables('gtwyName')]"
                    },
                    "gtwyAddressPoolName": {
                        "value": "[variables('gtwyAddressPoolName')]"
                    },
                    "appGtwyClusterSize": {
                        "value": "[parameters('appGtwyClusterSize')]"
                    },
                    "appGtwyTier": {
                        "value": "[parameters('appGtwyTier')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "gtwySubnetName": {
                        "value": "[parameters('gtwySubnetName')]"
                    },
                    "sslBase64EncodedPfxCertificate": {
                        "value": "[parameters('sslBase64EncodedPfxCertificate')]"
                    },
                    "sslPfxCertificatePassword": {
                        "value": "[parameters('sslPfxCertificatePassword')]"
                    },
                    "workspaceName": {
                        "value": "[variables('workspace').name]"
                    },
                    "enableAnalytics": {
                        "value": "[parameters('enableAnalytics')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2015-01-01",
            "name": "vmssTemplate",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('storage').name)]",
                "[variables('dbTemplate')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmssTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "confluenceVersion": {
                        "value": "[parameters('confluenceVersion')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "clusterSize": {
                        "value": "[parameters('clusterSize')]"
                    },
                    "clusterVmSize": {
                        "value": "[parameters('clusterVmSize')]"
                    },
                    "clusterSshUser": {
                        "value": "[parameters('nodeSshUser')]"
                    },
                    "clusterSshPassword": {
                        "value": "[parameters('nodeSshPassword')]"
                    },
                    "cname": {
                        "value": "[parameters('cname')]"
                    },
                    "dbCreateNew": {
                        "value": "[parameters('dbCreateNew')]"
                    },
                    "dbType": {
                        "value": "[parameters('dbType')]"
                    },
                    "dbPort": {
                        "value": "[parameters('dbPort')]"
                    },
                    "dbDatabase": {
                        "value": "[parameters('dbDatabase')]"
                    },
                    "dbSchema": {
                        "value": "[parameters('dbSchema')]"
                    },
                    "dbUsername": {
                        "value": "[parameters('dbUsername')]"
                    },
                    "dbPassword": {
                        "value": "[parameters('dbPassword')]"
                    },
                    "confAdminUserName": {
                        "value": "[parameters('userName')]"
                    },
                    "confAdminUserPassword": {
                        "value": "[parameters('userCredential')]"
                    },
                    "confAdminUserFullname": {
                        "value": "[parameters('userFullname')]"
                    },
                    "confAdminUserEmail": {
                        "value": "[parameters('userEmail')]"
                    },
                    "confAppTitle": {
                        "value": "[parameters('applicationTitle')]"
                    },
                    "vnetName": {
                        "value": "[parameters('vnetName')]"
                    },
                    "appSubnetName": {
                        "value": "[parameters('appSubnetName')]"
                    },
                    "jumpboxName": {
                        "value": "[parameters('jumpboxName')]"
                    },
                    "sslBase64EncodedPfxCertificate": {
                        "value": "[parameters('sslBase64EncodedPfxCertificate')]"
                    },
                    "appInsightsInstrumentKey": {
                        "value": "[if(parameters('enableApplicationInsights'), reference('appInsightsTemplate').outputs.instrumentkey.value, '')]"
                    },
                    "gtwyName": {
                        "value": "[variables('gtwyName')]"
                    },
                    "gtwyAddressPoolName": {
                        "value": "[variables('gtwyAddressPoolName')]"
                    },
                    "confBaseUrl": {
                        "value": "[if(not(empty(parameters('cname'))), parameters('cname'), reference(variables('gtwyIpName')).dnsSettings.fqdn)]"
                    },
                    "confDbServerName": {
                        "value": "[if(parameters('dbCreateNew'), reference(variables('dbTemplate')).outputs.serverName.value, parameters('dbHost'))]"
                    },
                    "storageAccessKey": {
                        "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts/', variables('storage').name), '2017-06-01').keys[0].value]"
                    },
                    "storageFilesEndpoint": {
                        "value": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storage').name), '2017-06-01').primaryEndpoints.file]"
                    },
                    "enableAcceleratedNetworking": {
                        "value": "[parameters('enableAcceleratedNetworking')]"
                    },
                    "workspaceId": {
                        "value": "[if(parameters('enableAnalytics'), reference('workspaceTemplate').outputs.workspaceId.value, '')]"
                    },
                    "workspacePrimaryKey": {
                        "value": "[if(parameters('enableAnalytics'), reference('workspaceTemplate').outputs.workspacePrimaryKey.value, '')]"
                    },
                    "workspaceSecondaryKey": {
                        "value": "[if(parameters('enableAnalytics'), reference('workspaceTemplate').outputs.workspaceSecondaryKey.value, '')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2015-01-01",
            "name": "appInsightsTemplate",
            "type": "Microsoft.Resources/deployments",
            "condition": "[parameters('enableApplicationInsights')]",
            "dependsOn": [
                "workspaceTemplate",
                "[variables('dbTemplate')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('appInsightsTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2015-01-01",
            "name": "analyticsTemplate",
            "type": "Microsoft.Resources/deployments",
            "condition": "[parameters('enableAnalytics')]",
            "dependsOn": [
                "workspaceTemplate",
                "[variables('dbTemplate')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('analyticsTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "workspaceName": {
                        "value": "[variables('workspace').name]"
                    },
                    "dbType": {
                        "value": "[parameters('dbType')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "jdbcUrl": {
            "type": "string",
            "value": "[if(parameters('dbCreateNew'), reference(variables('dbTemplate')).outputs.jdbcUrl.value, reference('byodbTemplate').outputs.jdbcUrl.value)]"
        },
        "confAppEndpoint": {
            "type": "string",
            "value": "[reference(variables('gtwyIpName')).dnsSettings.fqdn]"
        },
        "gtwyIpName": {
            "type": "string",
            "value": "[variables('gtwyIpName')]"
        },
        "gtwyName": {
            "type": "string",
            "value": "[variables('gtwyName')]"
        },
        "storageAccountName": {
            "type": "string",
            "value": "[variables('storage').name]"
        },
        "clusterName": {
            "type": "string",
            "value": "[reference('vmssTemplate').outputs.clusterName.value]"
        },
        "appInsightsName": {
            "type": "string",
            "value": "[if(parameters('enableApplicationInsights'), reference('appInsightsTemplate').outputs.appInsightsName.value, '')]"
        },
        "dbDatabaseServerName": {
            "type": "string",
            "value": "[parameters('dbHost')]"
        },
        "dbDatabaseName": {
            "type": "string",
            "value": "[parameters('dbDatabase')]"
        }
    }
}
