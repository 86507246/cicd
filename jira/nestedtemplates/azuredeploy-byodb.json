{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "dbType": {
            "type": "string",
            "allowedValues": [
                "sqlserver",
                "postgres",
                "mysql"
            ],
            "defaultValue": "sqlserver",
            "metadata": {
                "description": "Database type"
            }
        },
        "dbServerName": {
            "type": "string",
            "metadata": {
                "description": "DB Server Name"
            }
        },
        "dbDatabaseName": {
            "type": "string",
            "metadata": {
                "description": "DB Database Name"
            }
        },
        "dbPort": {
            "type": "string",
            "metadata": {
                "description": "Database port to use"
            }
        },
        "dbUsername": {
            "type": "string",
            "metadata": {
                "description": "Database username"
            }
        },
        "dbPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Database password"
            }
        },
        "vnetName": {
            "type": "string"
        },
        "appSubnetName": {
            "type": "string"
        },
        "clusterDbAccessNetworkRule": {
            "type": "string",
            "defaultValue": "allowClusterDbAccess"
        }
    },
    "variables": {
        "dbName": "[if(or(contains(parameters('dbServerName'), 'database.windows.net'), contains(parameters('dbServerName'), 'postgres.database.azure.com')), split(parameters('dbServerName'),'.')[0], parameters('dbServerName'))]",
        "mssqlJdbcUrl": "[concat('jdbc:', parameters('dbType'), '://', parameters('dbServerName'), ':', parameters('dbPort'), ';database=', parameters('dbDatabaseName'), ';user=', parameters('dbUsername'), '@', split(parameters('dbServerName'),'.')[0], ';password=', parameters('dbPassword'))]",
        "postgresJdbcUrl": "[concat('jdbc:postgresql://', parameters('dbServerName'), ':', parameters('dbPort'), '/', parameters('dbDatabaseName'), '?user=', parameters('dbUsername'), '@', split(parameters('dbServerName'),'.')[0], '&password=', parameters('dbPassword'), '&ssl=true')]"
    },
    "resources": [
        {
            "type": "Microsoft.Sql/servers/virtualNetworkRules",
            "name": "[concat(variables('dbName'), '/', parameters('clusterDbAccessNetworkRule'))]",
            "condition": "[equals(parameters('dbType'), 'sqlserver')]",
            "apiVersion": "2015-05-01-preview",
            "properties": {
                "virtualNetworkSubnetId": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '/subnets/', parameters('appSubnetName'))]",
                "ignoreMissingVnetServiceEndpoint": false
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/servers/virtualNetworkRules",
            "name": "[concat(variables('dbName'), '/', parameters('clusterDbAccessNetworkRule'))]",
            "condition": "[equals(parameters('dbType'), 'postgres')]",
            "apiVersion": "2017-12-01",
            "properties": {
                "virtualNetworkSubnetId": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '/subnets/', parameters('appSubnetName'))]",
                "ignoreMissingVnetServiceEndpoint": false
            }
        }
    ],
    "outputs": {
        "jdbcUrl": {
            "type": "string",
            "value": "[if(equals(parameters('dbType'), 'sqlserver'), variables('mssqlJdbcUrl'), variables('postgresJdbcUrl'))]"
        }
    }
}