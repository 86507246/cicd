{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string"
    },
    "dbServerName": {
      "type": "string",
      "metadata": {
        "description": "DB Server Name"
      }
    },
    "dbDatabaseName": {
      "type": "string",
      "metadata": {
        "description": "DB Database Name"
      }
    },
    "dbUsername": {
      "type": "string",
      "metadata": {
        "description": "Database username"
      }
    },
    "dbPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Database password"
      }
    },
    "postgresDbTier": {
      "type": "string",
      "allowedValues": [
        "General Purpose",
        "Memory Optimized"
      ],
      "defaultValue": "General Purpose",
      "metadata": {
        "description": "The database service tier"
      }
    },
    "postgresDbStorage": {
      "type": "int",
      "defaultValue": 102400,
      "minValue": 102400,
      "maxValue": 4194304,
      "metadata": {
        "description": "The number of storage in MB per vCore to be assigned to the PostgresSQL Managed Database Service. Compute resources are provided as vCores, they represent the logical CPU of the underlying hardware"
      }
    },
    "vnetName": {
      "type": "string"
    },
    "appSubnetName": {
      "type": "string"
    },
    "clusterDbAccessNetworkRule": {
      "type": "string",
      "defaultValue": "allowClusterDbAccess"
    },
    "jumpboxPublicIpAddress": {
      "type": "string"
    }
  },
  "variables": {
    "namespace": "jira",
    "postgresql": {
      "server": {
        "name": "[parameters('dbServerName')]",
        "username": "[parameters('dbUsername')]",
        "password": "[parameters('dbPassword')]"
      },
      "database": {
        "name": "[parameters('dbDatabaseName')]",
        "tier": "[variables('lookup').tier[string(parameters('postgresDbTier'))]]",
        "tierName": "[variables('lookup').tierName[string(parameters('postgresDbTier'))]]",
        "family": "Gen5",
        "capacity": 4,
        "storage": "[parameters('postgresDbStorage')]",
        "backupRetentionPeriod": 7,
        "geoRedundantBackup": "Enabled",
        "charset": "UTF8",
        "collation": "English_United States.1252"

      }
    },
    "lookup": {
      "tier": {
        "General Purpose": "GeneralPurpose",
        "Memory Optimized": "MemoryOptimized"
      },
      "tierName": {
        "General Purpose": "GP_Gen5_4",
        "Memory Optimized": "MO_Gen5_4"
      }
    },
    "tags": {
      "vendor": "Atlassian",
      "product": "JIRA",
      "provider": "2F0AF47A-92C7-413A-9009-C3815BFF7AF6"
    }
  },
  "resources": [
    {
      "name": "[variables('postgresql').server.name]",
      "type": "Microsoft.DBforPostgreSQL/servers",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('postgresql').database.tierName]",
        "tier": "[variables('postgresql').database.tier]",
        "family": "[variables('postgresql').database.family]",
        "capacity": "[variables('postgresql').database.capacity]"
      },
      "apiVersion": "2017-12-01-preview",
      "properties": {
        "storageProfile": {
          "storageMB": "[variables('postgresql').database.storage]",
          "backupRetentionDays": "[variables('postgresql').database.backupRetentionPeriod]",
          "geoRedundantBackup": "[variables('postgresql').database.geoRedundantBackup]"
        },
        "administratorLogin": "[variables('postgresql').server.username]",
        "administratorLoginPassword": "[variables('postgresql').server.password]",
        "version": "9.6",
        "sslEnforcement": "Enabled"
      }
    },
    {
      "type": "Microsoft.DBforPostgreSQL/servers/databases",
      "name": "[concat(variables('postgresql').server.name, '/',variables('postgresql').database.name)]",
      "apiVersion": "2017-12-01-preview",
      "scale": null,
      "properties": {
        "charset": "[variables('postgresql').database.charset]",
        "collation": "[variables('postgresql').database.collation]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('dbServerName'))]"
      ]
    },
    {
      "type": "Microsoft.DBforPostgreSQL/servers/virtualNetworkRules",
      "name": "[concat(parameters('dbServerName'), '/', parameters('clusterDbAccessNetworkRule'))]",
      "apiVersion": "2017-12-01",
      "scale": null,
      "properties": {
        "virtualNetworkSubnetId": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName')), '/subnets/', parameters('appSubnetName'))]",
        "ignoreMissingVnetServiceEndpoint": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('dbServerName'))]"
      ]
    },
    {
      "type": "Microsoft.DBforPostgreSQL/servers/firewallRules",
      "name": "[concat(parameters('dbServerName'), '/', 'AllowAccessToSetupVMPublicIP')]",
      "apiVersion": "2017-12-01-preview",
      "properties": {
        "startIpAddress": "[parameters('jumpboxPublicIpAddress')]",
        "endIpAddress": "[parameters('jumpboxPublicIpAddress')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/servers', parameters('dbServerName'))]"
      ]
    }
  ],
  "outputs": {
    "serverName": {
      "type": "string",
      "value": "[reference(variables('postgresql').server.name).fullyQualifiedDomainName]"
    },
    "jdbcUrl": {
      "type": "string",
      "value": "[concat('jdbc:postgresql://', reference(variables('postgresql').server.name).fullyQualifiedDomainName, ':5432;/', variables('postgresql').database.name, '?user=', variables('postgresql').server.username, '@', variables('postgresql').server.name, '?password=', variables('postgresql').server.password, '?ssl=true')]"
    }
  }
}