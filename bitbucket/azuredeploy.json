{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "vnetCIDR": {
      "type": "string",
      "defaultValue": "10.0.0.0/16"
    },
    "publicNetCIDR": {
      "type": "string",
      "defaultValue": "10.0.1.0/24"
    },
    "adminUser": {
      "type": "string",
      "defaultValue": "bbsadmin"
    },
    "adminPass": {
      "type": "securestring"
    },
    "sshKey": {
      "type": "string"
    },
    "jumpboxSize": {
      "type": "string",
      "defaultValue": "Standard_B1s"
    },
    "jumpboxHostname": {
      "type": "string",
      "defaultValue": "jumpbox"
    },
    "applicationTitle": {
      "type": "string",
      "defaultValue": "Atlassian Bitbucket Server"
    }
  },
  "variables": {
    "namespace": "bitbucket",
    "suffix": "[uniqueString(resourceGroup().id)]",
    "tags": {
      "vendor": "Atlassian",
      "product": "Bitbucket Server",
      "provider": "2F0AF47A-92C7-413A-9009-C3815BFF7AF6"
    },
    "api": {
      "compute": {
        "virtualMachines": "2018-06-01"
      },
      "network": {
        "publicIPAddresses": "2017-10-01",
        "virtualNetworks": "2017-10-01",
        "networkInterfaces": "2017-10-01",
        "networkSecurityGroups": "2017-10-01"
      }
    },
    "net": {
      "vnet": {
        "name": "[concat(variables('namespace'), 'vnet')]",
        "cidr": "[parameters('vnetCIDR')]"
      },
      "ip": {
        "name": "[concat(variables('namespace'), 'natip')]",
        "cidr": "10.0.2.99",
        "dns": "[concat(variables('namespace'), 'nat', variables('suffix'))]"
      },
      "nic": {
        "public": {
          "name": "[concat(variables('namespace'), 'publicnic')]",
          "ipConfig": {
            "name": "[concat(variables('namespace'), 'publicipconfig')]"
          }
        }
      },
      "nsg": {
        "public": {
          "name": "[concat(variables('namespace'), 'publicnsg')]"
        }
      },
      "subnets": {
        "public": {
          "name": "[concat(variables('namespace'), 'netpublic')]",
          "cidr": "[parameters('publicNetCIDR')]"
        }
      }
    },
    "vm": {
      "jumpbox": {
        "name": "[concat(variables('namespace'), 'jumpbox')]",
        "size": "[parameters('jumpboxSize')]",
        "hostname": "[parameters('jumpboxHostname')]",
        "image": {
          "publisher": "Canonical",
          "offer": "UbuntuServer",
          "sku": "16.04.0-LTS"
        }
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "[variables('api').network.networkSecurityGroups]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "name": "[variables('net').nsg.public.name]",
      "properties": {
        "securityRules": [
          {
            "name": "allow",
            "properties": {
              "description": "Allows HTTP/S, SSH and Git traffic only from the Internet",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRanges": [
                "22",
                "80",
                "443",
                "7990"
              ],
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "direction": "Inbound",
              "priority": 100
            }
          },
          {
            "name": "denyall",
            "properties": {
              "description": "Deny all",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Deny",
              "direction": "Inbound",
              "priority": 101
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "[variables('api').network.virtualNetworks]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "dependsOn": [
        "[variables('net').nsg.public.name]"
      ],
      "name": "[variables('net').vnet.name]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('net').vnet.cidr]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('net').subnets.public.name]",
            "properties": {
              "addressPrefix": "[variables('net').subnets.public.cidr]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('net').nsg.public.name)]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "[variables('api').network.publicIPAddresses]",
      "name": "[variables('net').ip.name]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[variables('net').ip.dns]"
        }
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('api').network.networkInterfaces]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "name": "[variables('net').nic.public.name]",
      "dependsOn": [
        "[variables('net').ip.name]",
        "[variables('net').vnet.name]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[variables('net').nic.public.ipConfig.name]",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('net').vnet.name, variables('net').subnets.public.name)]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('net').ip.name)]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "[variables('api').compute.virtualMachines]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "dependsOn": [
        "[variables('net').nic.public.name]"
      ],
      "name": "[variables('vm').jumpbox.name]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vm').jumpbox.size]"
        },
        "osProfile": {
          "computerName": "[variables('vm').jumpbox.hostname]",
          "adminUsername": "[parameters('adminUser')]",
          "adminPassword": "[parameters('adminPass')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUser'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('sshKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('vm').jumpbox.image.publisher]",
            "offer": "[variables('vm').jumpbox.image.offer]",
            "sku": "[variables('vm').jumpbox.image.sku]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage"
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('net').nic.public.name)]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    "bitbucket": {
      "type": "string",
      "value": "[reference(variables('net').ip.name).dnsSettings.fqdn]"
    },
    "ssh": {
      "type": "string",
      "value": "[concat('ssh ', parameters('adminUser'), '@', reference(variables('net').ip.name).dnsSettings.fqdn)]"
    }
  }
}